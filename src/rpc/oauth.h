/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _OAUTH_H_RPCGEN
#define _OAUTH_H_RPCGEN

#include <rpc/rpc.h>

#ifdef __cplusplus
extern "C"
{
#endif

	struct access_token_t
	{
		char *access_token;
		char *refresh_token;
		int expiration;
	};
	typedef struct access_token_t access_token_t;

	struct request_authorization_t
	{
		char *user_id;
		char *authentification_token;
		bool_t refresh_token;
	};
	typedef struct request_authorization_t request_authorization_t;

	struct access_token_request_t
	{
		char *user_id;
		char *authentification_token;
		int auto_refresh;
	};
	typedef struct access_token_request_t access_token_request_t;

	struct delegated_action_request_t
	{
		char *operation_type;
		char *resource;
		char *access_token;
	};
	typedef struct delegated_action_request_t delegated_action_request_t;

#define OAUTH_PROTOCOL 0x31234567
#define OAUTH_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define request_authorization 1
	extern char **request_authorization_1(char **, CLIENT *);
	extern char **request_authorization_1_svc(char **, struct svc_req *);
#define request_access_token 2
	extern access_token_t *request_access_token_1(access_token_request_t *, CLIENT *);
	extern access_token_t *request_access_token_1_svc(access_token_request_t *, struct svc_req *);
#define validate_delegated_action 3
	extern char **validate_delegated_action_1(delegated_action_request_t *, CLIENT *);
	extern char **validate_delegated_action_1_svc(delegated_action_request_t *, struct svc_req *);
#define approve_request_token 4
	extern char **approve_request_token_1(request_authorization_t *, CLIENT *);
	extern char **approve_request_token_1_svc(request_authorization_t *, struct svc_req *);
#define refresh_access 5
	extern access_token_t *refresh_access_1(access_token_t *, CLIENT *);
	extern access_token_t *refresh_access_1_svc(access_token_t *, struct svc_req *);
	extern int oauth_protocol_1_freeresult(SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define request_authorization 1
extern char **request_authorization_1();
extern char **request_authorization_1_svc();
#define request_access_token 2
extern access_token_t *request_access_token_1();
extern access_token_t *request_access_token_1_svc();
#define validate_delegated_action 3
extern char **validate_delegated_action_1();
extern char **validate_delegated_action_1_svc();
#define approve_request_token 4
extern char **approve_request_token_1();
extern char **approve_request_token_1_svc();
#define refresh_access 5
extern access_token_t *refresh_access_1();
extern access_token_t *refresh_access_1_svc();
extern int oauth_protocol_1_freeresult();
#endif /* K&R C */

	/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
	extern bool_t xdr_access_token_t(XDR *, access_token_t *);
	extern bool_t xdr_request_authorization_t(XDR *, request_authorization_t *);
	extern bool_t xdr_access_token_request_t(XDR *, access_token_request_t *);
	extern bool_t xdr_delegated_action_request_t(XDR *, delegated_action_request_t *);

#else /* K&R C */
extern bool_t xdr_access_token_t();
extern bool_t xdr_request_authorization_t();
extern bool_t xdr_access_token_request_t();
extern bool_t xdr_delegated_action_request_t();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_OAUTH_H_RPCGEN */
