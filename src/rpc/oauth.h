/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _OAUTH_H_RPCGEN
#define _OAUTH_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct access_token_t {
	char *access_token;
	char *refresh_token;
	int expiration;
};
typedef struct access_token_t access_token_t;

struct request_authorization_t {
	char *user_id;
	char *authentification_token;
	bool_t refresh_token;
};
typedef struct request_authorization_t request_authorization_t;

enum response_codes_to_attempt_auth {
	NOT_FOUND = 0,
};
typedef enum response_codes_to_attempt_auth response_codes_to_attempt_auth;

#define OAUTH_PROTOCOL 0x31234567
#define OAUTH_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define attemp_auth 1
extern  char ** attemp_auth_1(char **, CLIENT *);
extern  char ** attemp_auth_1_svc(char **, struct svc_req *);
#define request_access_token 2
extern  access_token_t * request_access_token_1(request_authorization_t *, CLIENT *);
extern  access_token_t * request_access_token_1_svc(request_authorization_t *, struct svc_req *);
extern int oauth_protocol_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define attemp_auth 1
extern  char ** attemp_auth_1();
extern  char ** attemp_auth_1_svc();
#define request_access_token 2
extern  access_token_t * request_access_token_1();
extern  access_token_t * request_access_token_1_svc();
extern int oauth_protocol_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_access_token_t (XDR *, access_token_t*);
extern  bool_t xdr_request_authorization_t (XDR *, request_authorization_t*);
extern  bool_t xdr_response_codes_to_attempt_auth (XDR *, response_codes_to_attempt_auth*);

#else /* K&R C */
extern bool_t xdr_access_token_t ();
extern bool_t xdr_request_authorization_t ();
extern bool_t xdr_response_codes_to_attempt_auth ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_OAUTH_H_RPCGEN */
